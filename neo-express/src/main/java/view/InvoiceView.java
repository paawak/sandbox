/*
 * InvoiceView.java
 *
 * Created on 26 April 2004, 19:53
 */

package view;

/**
 *
 * @author  paawak
 */

import java.awt.*;
import java.text.*;
import java.util.*;
import javax.swing.*;

import controller.*;
import utils.general.*;
import utils.database.*;
import model.*;
import model.database.*;

public class InvoiceView extends javax.swing.JPanel implements TableListDB, ClientAccountDB{
    
    /** Creates new form InvoiceView */
    public InvoiceView() {
        initComponents();
        setDateFields();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        btGrpSearchBy = new javax.swing.ButtonGroup();
        pnlTitle = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        pnlSearchMain = new javax.swing.JPanel();
        lbFromDate = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        lbToDate = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        btDisplayRecord = new javax.swing.JButton();
        rdBtInvoiceNum = new javax.swing.JRadioButton();
        rdBtClientName = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        pnlSearchByClientName = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        cbClientName = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        cbInvoiceNum = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtInvNum = new javax.swing.JTextField();
        txtInvDate = new javax.swing.JTextField();
        txtCurMonthYear = new javax.swing.JTextField();
        txtClientName = new javax.swing.JTextField();
        txtTotalAmt = new javax.swing.JTextField();
        txtTax = new javax.swing.JTextField();
        txtTDS = new javax.swing.JTextField();
        txtInvAmt = new javax.swing.JTextField();
        txtBookAdjAmt = new javax.swing.JTextField();
        txtRemarks = new javax.swing.JTextField();
        txtNetRecievable = new javax.swing.JTextField();
        txtAmtRecieved = new javax.swing.JTextField();
        btSaveChanges = new javax.swing.JButton();
        btDone = new javax.swing.JButton();
        btToFile = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlTitle.setLayout(new java.awt.BorderLayout());

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Invoice");
        pnlTitle.add(jLabel17, java.awt.BorderLayout.CENTER);

        add(pnlTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 440, 30));

        pnlSearchMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlSearchMain.setBorder(new javax.swing.border.TitledBorder(null, "Search:", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        lbFromDate.setText("From :");
        pnlSearchMain.add(lbFromDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        txtFromDate.setEditable(false);
        txtFromDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtFromDateMouseReleased(evt);
            }
        });

        pnlSearchMain.add(txtFromDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150, -1));

        lbToDate.setText("To :");
        pnlSearchMain.add(lbToDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1, -1));

        txtToDate.setEditable(false);
        txtToDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtToDateMouseReleased(evt);
            }
        });

        pnlSearchMain.add(txtToDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, 150, -1));

        btDisplayRecord.setText("Display Record");
        btDisplayRecord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDisplayRecordMouseReleased(evt);
            }
        });

        pnlSearchMain.add(btDisplayRecord, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 250, -1, -1));

        rdBtInvoiceNum.setSelected(true);
        rdBtInvoiceNum.setText("Invoice No.");
        btGrpSearchBy.add(rdBtInvoiceNum);
        rdBtInvoiceNum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdBtInvoiceNumMouseReleased(evt);
            }
        });

        pnlSearchMain.add(rdBtInvoiceNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1, -1));

        rdBtClientName.setText("Client Name");
        btGrpSearchBy.add(rdBtClientName);
        rdBtClientName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdBtClientNameMouseReleased(evt);
            }
        });

        pnlSearchMain.add(rdBtClientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, -1, -1));

        jLabel13.setText("Search By :");
        pnlSearchMain.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        pnlSearchByClientName.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlSearchByClientName.setVisible(false);
        jLabel14.setText("Client Name :");
        pnlSearchByClientName.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        cbClientName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbClientNameItemStateChanged(evt);
            }
        });

        pnlSearchByClientName.add(cbClientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 250, -1));

        pnlSearchMain.add(pnlSearchByClientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 420, 40));

        jLabel15.setText("Invoice Number :");
        pnlSearchMain.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, -1, -1));

        cbInvoiceNum.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbInvoiceNumItemStateChanged(evt);
            }
        });

        pnlSearchMain.add(cbInvoiceNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, 250, -1));

        add(pnlSearchMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 60, 520, 300));

        jLabel1.setText("Invoice Number :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 80, -1, -1));

        jLabel2.setText("Invoice Date :");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 80, -1, -1));

        jLabel3.setText("Month/Year :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 130, -1, -1));

        jLabel4.setText("Client Name :");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 120, -1, -1));

        jLabel5.setText("Total Amt :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 180, -1, -1));

        jLabel6.setText("Tax :");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, -1, -1));

        jLabel7.setText("TDS :");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 280, -1, -1));

        jLabel8.setText("Net Recievable :");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 540, -1, -1));

        jLabel9.setText("Book Adjustment Amt :");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, -1, -1));

        jLabel10.setText("Remarks :");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, -1, -1));

        jLabel11.setText("Amt. Recieved :");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 540, -1, -1));

        jLabel12.setText("Invoice Amt. :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 330, -1, -1));

        txtInvNum.setEditable(false);
        add(txtInvNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 160, -1));

        txtInvDate.setEditable(false);
        add(txtInvDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 80, 150, -1));

        txtCurMonthYear.setEditable(false);
        add(txtCurMonthYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 130, 160, -1));

        txtClientName.setEditable(false);
        add(txtClientName, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 120, 150, -1));

        txtTotalAmt.setEditable(false);
        add(txtTotalAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 180, 160, -1));

        txtTax.setEditable(false);
        add(txtTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 230, 160, -1));

        txtTDS.setEditable(false);
        add(txtTDS, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 280, 160, -1));

        txtInvAmt.setEditable(false);
        add(txtInvAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 330, 160, -1));

        txtBookAdjAmt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtBookAdjAmtFocusLost(evt);
            }
        });

        add(txtBookAdjAmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 440, 150, -1));

        add(txtRemarks, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 490, 670, -1));

        txtNetRecievable.setEditable(false);
        add(txtNetRecievable, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 540, 220, -1));

        add(txtAmtRecieved, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 540, 300, -1));

        btSaveChanges.setText("Modify");
        btSaveChanges.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btSaveChangesMouseReleased(evt);
            }
        });

        add(btSaveChanges, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 660, -1, -1));

        btDone.setText("Done");
        btDone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDoneMouseReleased(evt);
            }
        });

        add(btDone, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 660, -1, -1));

        btToFile.setText("To File...");
        btToFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btToFileMouseReleased(evt);
            }
        });

        add(btToFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 660, -1, -1));

    }//GEN-END:initComponents

    private void btToFileMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btToFileMouseReleased
        // Add your handling code here:
        btFilePressed();
    }//GEN-LAST:event_btToFileMouseReleased

    private void cbInvoiceNumItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbInvoiceNumItemStateChanged
        // Add your handling code here:
        btDispRecPressed();
    }//GEN-LAST:event_cbInvoiceNumItemStateChanged

    private void rdBtInvoiceNumMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdBtInvoiceNumMouseReleased
        // Add your handling code here:
        findSearchCriteria();
    }//GEN-LAST:event_rdBtInvoiceNumMouseReleased

    private void rdBtClientNameMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdBtClientNameMouseReleased
        // Add your handling code here:
        findSearchCriteria();
    }//GEN-LAST:event_rdBtClientNameMouseReleased

    private void cbClientNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbClientNameItemStateChanged
        // Add your handling code here:
        //fill cbInvoiceNum
        JComboUtils.fillComboWithNewArray(cbInvoiceNum,invCntr.getInvoiceNums(txtFromDate.getText(),txtToDate.getText(),cbClientName.getSelectedItem()));         
    }//GEN-LAST:event_cbClientNameItemStateChanged

    private void txtToDateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtToDateMouseReleased
        // Add your handling code here:
        ShowCalendar cal = new ShowCalendar(new java.awt.Frame(), true,  txtToDate);
        cal.show();        
        findSearchCriteria();
    }//GEN-LAST:event_txtToDateMouseReleased

    private void btDoneMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDoneMouseReleased
        // Add your handling code here:
        doneButtonPressed();
    }//GEN-LAST:event_btDoneMouseReleased

    private void txtBookAdjAmtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtBookAdjAmtFocusLost
        // Add your handling code here:
        changeNetRecievable();
    }//GEN-LAST:event_txtBookAdjAmtFocusLost

    private void btSaveChangesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btSaveChangesMouseReleased
        // Add your handling code here:
        btSaveChangesPressed();
    }//GEN-LAST:event_btSaveChangesMouseReleased

    private void btDisplayRecordMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDisplayRecordMouseReleased
        // Add your handling code here:
        btDispRecPressed();
    }//GEN-LAST:event_btDisplayRecordMouseReleased

    private void txtFromDateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFromDateMouseReleased
        // Add your handling code here:
        ShowCalendar cal = new ShowCalendar(new java.awt.Frame(), true,  txtFromDate);
        cal.show();
        findSearchCriteria();
    }//GEN-LAST:event_txtFromDateMouseReleased

    /**
     *displays the given invoice according to the selected
     *item in the invoice num combo
     */
    private void btDispRecPressed(){
        InvoiceObject invObj=invCntr.getInvoiceRecord(cbInvoiceNum.getSelectedItem());
        setFields(invObj);
    }
    
    /**
     *search by invoice num
     */
    private void searchByInvNum(){
        //make pnlSearchByClientName invisible
        pnlSearchByClientName.setVisible(false);
        //fill cbInvoiceNum
        Object[] obj = invCntr.getInvoiceNums(txtFromDate.getText(),txtToDate.getText());
        if(obj == null || obj.length==0)
            JOptionPane.showMessageDialog(this,"Please enter proper search criteria.","No match found.",JOptionPane.INFORMATION_MESSAGE);
        else
            JComboUtils.fillComboWithNewArray(cbInvoiceNum,obj);
    }
    
    /**
     *search by client names
     */
    private void searchByClientNames(){
        //make pnlSearchByClientName visible
        pnlSearchByClientName.setVisible(true);
        //fill cbClientName
        Object[] obj1 = invCntr.getClientNames(txtFromDate.getText(),txtToDate.getText());
        if(obj1 == null || obj1.length==0)
            JOptionPane.showMessageDialog(this,"Please enter proper search criteria.","No match found.",JOptionPane.INFORMATION_MESSAGE);
        else{
            JComboUtils.fillComboWithNewArray(cbClientName,obj1);        
            //fill cbInvoiceNum
            Object[] obj2 = invCntr.getInvoiceNums(txtFromDate.getText(),txtToDate.getText(),cbClientName.getSelectedItem());
            if(obj2 == null || obj2.length==0)
                JOptionPane.showMessageDialog(this,"Please enter proper search criteria.","No match found.",JOptionPane.INFORMATION_MESSAGE);
            else
                JComboUtils.fillComboWithNewArray(cbInvoiceNum,obj2);        
        }
    }
    
    /**
     *finds out the current search criteria chosen by the user:
     *inv num/cust name and takes appropriate action
     */
    private void findSearchCriteria(){
        if(rdBtInvoiceNum.isSelected())
            searchByInvNum();
        else
            searchByClientNames();
    }
    
    /**
     *sets the text fields from the Invoice Object
     */
    private void setFields(InvoiceObject invObj){
        if(invObj == null){
            JOptionPane.showMessageDialog(this,"Please enter proper search criteria.","No match found.",JOptionPane.INFORMATION_MESSAGE);
            return ;
        }
        txtInvNum.setText(invObj.getInvoiceNum().toString());
        txtInvDate.setText(invObj.getInvoiceDate().toString()); 
        //System.out.println(invObj.getCurYear()+"-"+invObj.getCurMonth()+"-01");
        txtCurMonthYear.setText(dt.getFormattedDate(invObj.getCurYear()+"-"+invObj.getCurMonth()+"-01", "MMM, yyyy"));
        //get client name
        Object clientName = null;
        try{
            clientName=clAccDb.queryOneElement(ClientAccountDB.name,"WHERE "+ClientAccountDB.accnum+"='"+invObj.getAccNum()+"'");
        }catch(Exception e){            
        }
        txtClientName.setText(clientName.toString());
        txtTotalAmt.setText(invObj.getTotalAmt().toString());
        txtTax.setText(invObj.getTax().toString());
        txtTDS.setText(invObj.getTdsAmount().toString());
        txtInvAmt.setText(invObj.getInvoiceAmt().toString());
        txtBookAdjAmt.setText(invObj.getBookAdjAmt().toString());
        txtRemarks.setText(invObj.getRemarks().toString());
        txtNetRecievable.setText(invObj.getNetReceivable().toString());
        txtAmtRecieved.setText(invObj.getRecievedAmt().toString());
        
    }
    
    /**
     *resets all text fields 
     */
    private void clearInputs(){
        Vector vec = new Vector();
        for(int i=0;i<InvoiceDB.fields;i++)
            vec.addElement("");
        try{
            InvoiceObject obj = new InvoiceObject(vec);
            setFields(obj);
            txtCurMonthYear.setText("");
        }catch (Exception e){
            System.out.println(e);
        }
    }
    
    private void btSaveChangesPressed(){
        if(txtInvNum.getText().equals("")){
            JOptionPane.showMessageDialog(this,"No records to update.","Enter the Search Criteria",JOptionPane.INFORMATION_MESSAGE);
            return ;
        }        
        else if(!txtValid.checkDecimal(txtAmtRecieved, pattern)){
            return ;
        }          
        
        Object[] obj = new Object[9];
        //book adj amt
        obj[0] = txtBookAdjAmt.getText();
        //remarks
        obj[1] = txtRemarks.getText();
        //net recievable
        obj[2] = txtNetRecievable.getText();
        //recieved amt
        obj[3] = txtAmtRecieved.getText();
        //is part payment, has paid full: compare recievable/recieved
        float recievable=Float.parseFloat(txtNetRecievable.getText());
        float recieved=Float.parseFloat(txtAmtRecieved.getText());
        
        if(recievable!=recieved){
            obj[4]="1";
            obj[5]="0";
        }
        else{
            obj[4]="0";
            obj[5]="1";
        }
        //empl id
        obj[6] = new DailyOrderBookController().getEmplIDLoggedIn();
        
        //entry date
        obj[7] = dt.getMySqlDate();
        //entry time
        obj[8] = dt.getMySqlTime();
        
        if(invCntr.updateBookAdj(obj,txtInvNum.getText())){
            JOptionPane.showMessageDialog(this,"Records saved successfully.","Saved",JOptionPane.INFORMATION_MESSAGE);
            clearInputs();
        }
        else
            JOptionPane.showMessageDialog(this,"Record could not be saved.","Sorry",JOptionPane.ERROR_MESSAGE);
    }
    
    /**
     *sets the net recievable
     */
    private void changeNetRecievable(){
        if(!txtValid.checkDecimal(txtBookAdjAmt, pattern)){
            return ;
        }        
        
        float  bookAdj = Float.parseFloat(txtBookAdjAmt.getText());
        float  invAmt = Float.parseFloat(txtInvAmt.getText());
        float netRecievble = invAmt-bookAdj;
        if(netRecievble<=0){
            JOptionPane.showMessageDialog(this,"Book Adjustment Amt. should be lesser than Invoice Amt.","Faulty input",JOptionPane.ERROR_MESSAGE);
            txtBookAdjAmt.setText("0.00");
            txtBookAdjAmt.selectAll();
            //txtBookAdjAmt.requestFocus();
            return ;
        }
        DecimalFormat frm = new DecimalFormat("0.00");
        txtNetRecievable.setText(frm.format(netRecievble));
    }
    
    private void doneButtonPressed(){
        this.setVisible(false);
    }
    
    /** to set the txtFromDate to the 1st of the month and
     * txtToDate to the current date
     *
     *
     */
    private void setDateFields() {
        //set date fields
        GregorianCalendar gCal = new GregorianCalendar();
        gCal.set(gCal.DATE,gCal.getMinimum(gCal.DATE));
        DateTimeUtils dt = new DateTimeUtils();
        txtFromDate.setText(dt.getFormattedDate(gCal.getTime(),"yyyy/MM/dd"));
        txtToDate.setText(dt.getMySqlDate());
    }
    
    /**
     *method to print invoice deatils to a .doc file
     */
    private void btFilePressed(){
        if(cbInvoiceNum.getSelectedItem()==null || cbInvoiceNum.getSelectedItem().toString().equals(""))
            JOptionPane.showMessageDialog(this,"No record selected.","Select a record",JOptionPane.INFORMATION_MESSAGE);
        else{
            mnth.writeInvoiceDetailsToFile(invCntr.getInvoiceRecord(cbInvoiceNum.getSelectedItem()));
            JOptionPane.showMessageDialog(this,"Written to file.","Success!",JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDisplayRecord;
    private javax.swing.JButton btDone;
    private javax.swing.ButtonGroup btGrpSearchBy;
    private javax.swing.JButton btSaveChanges;
    private javax.swing.JButton btToFile;
    private javax.swing.JComboBox cbClientName;
    private javax.swing.JComboBox cbInvoiceNum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbFromDate;
    private javax.swing.JLabel lbToDate;
    private javax.swing.JPanel pnlSearchByClientName;
    private javax.swing.JPanel pnlSearchMain;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JRadioButton rdBtClientName;
    private javax.swing.JRadioButton rdBtInvoiceNum;
    private javax.swing.JTextField txtAmtRecieved;
    private javax.swing.JTextField txtBookAdjAmt;
    private javax.swing.JTextField txtClientName;
    private javax.swing.JTextField txtCurMonthYear;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtInvAmt;
    private javax.swing.JTextField txtInvDate;
    private javax.swing.JTextField txtInvNum;
    private javax.swing.JTextField txtNetRecievable;
    private javax.swing.JTextField txtRemarks;
    private javax.swing.JTextField txtTDS;
    private javax.swing.JTextField txtTax;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtTotalAmt;
    // End of variables declaration//GEN-END:variables
    
    private InvoiceController invCntr = new InvoiceController();
    private DateTimeUtils dt = new DateTimeUtils();
    private Database clAccDb = new Database(clientaccount); 
    private String pattern="0.00";//to be read from property file    
    private TxtFldValidation txtValid = new TxtFldValidation();
    private MonthRollController mnth = new MonthRollController();
}

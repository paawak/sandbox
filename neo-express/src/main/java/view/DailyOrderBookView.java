/*
 * DailyOrderBook.java
 *
 * Created on March 29, 2004, 2:36 PM
 */

package view;

/**
 *
 * @author  paawak
 */
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.GregorianCalendar;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.JTextField;

import model.DailyOrderBookObject;
import model.database.ClientAccountDB;
import model.database.DailyOrderBookDB;
import model.database.TableListDB;
import utils.general.DateTimeUtils;
import utils.general.JComboUtils;
import utils.general.SearchPanel_NoButton;
import utils.general.ShowCalendar;
import utils.general.TxtFldValidation;
import controller.DailyOrderBookController;
import controller.Database;

public class DailyOrderBookView extends javax.swing.JPanel implements
        TableListDB, ClientAccountDB, DailyOrderBookDB {

    /** Creates new form DailyOrderBook */
    public DailyOrderBookView() {
        dt = new DateTimeUtils();
        dailyOrderBookController = new DailyOrderBookController();
        txtValid = new TxtFldValidation();
        initComponents();
        setSpecialFields();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed"
    // desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        btnGrpTransactionType = new javax.swing.ButtonGroup();
        btGrSearchBy = new javax.swing.ButtonGroup();
        lbConsignmentNum = new javax.swing.JLabel();
        txtConsignmentNum = new javax.swing.JTextField();
        lbAccNum = new javax.swing.JLabel();
        cbCustName = new javax.swing.JComboBox();
        lbDestination = new javax.swing.JLabel();
        lbWeight = new javax.swing.JLabel();
        lbPackets = new javax.swing.JLabel();
        lbAmount = new javax.swing.JLabel();
        lbTransactionType = new javax.swing.JLabel();
        lbDeliveryDate = new javax.swing.JLabel();
        lbDeliveryTime = new javax.swing.JLabel();
        txtWeightKg = new javax.swing.JTextField();
        txtPackets = new javax.swing.JTextField();
        txtAmount = new javax.swing.JTextField();
        txtDeliveryDate = new javax.swing.JTextField();
        txtDeliveryTime = new javax.swing.JTextField();
        lbKg = new javax.swing.JLabel();
        lbConsignmentTime = new javax.swing.JLabel();
        txtConsignmentTime = new javax.swing.JTextField();
        txtWeightGm = new javax.swing.JTextField();
        lbGm = new javax.swing.JLabel();
        txtConsignmentDate = new javax.swing.JTextField();
        lbConsignmentDate = new javax.swing.JLabel();
        pnlAddTitle = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox(new String[] { "Local", "Domestic",
                "International" });
        pnlAddMode = new javax.swing.JPanel();
        btSave = new javax.swing.JButton();
        btDone = new javax.swing.JButton();
        pnlModifyMode = new javax.swing.JPanel();
        btSaveChanges = new javax.swing.JButton();
        btDelete = new javax.swing.JButton();
        btClose = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        scrPnAmountList = new javax.swing.JScrollPane();
        lstAmount = new javax.swing.JList();
        pnlRadioBts = new javax.swing.JPanel();
        rdBtCash = new javax.swing.JRadioButton();
        rdBtCredit = new javax.swing.JRadioButton();
        pnlBulkOrder = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtConsignmentNumFrom = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtConsignmentNumTo = new javax.swing.JTextField();
        cbDestination = new javax.swing.JComboBox();
        pnlSearchMain = new javax.swing.JPanel();
        lbFromDate = new javax.swing.JLabel();
        txtFromDate = new javax.swing.JTextField();
        lbToDate = new javax.swing.JLabel();
        txtToDate = new javax.swing.JTextField();
        btDeleteRecords = new javax.swing.JButton();
        rdBtConsignmentNum = new javax.swing.JRadioButton();
        rdBtClientName = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        pnlSearchByClientName = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        cbCustNameSearch = new javax.swing.JComboBox();
        pnlSearchByConsNum = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        pnlModifyTitle = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        pnlBulkOrderTitle = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        btDateBackward = new javax.swing.JButton();
        btDateForward = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        lbConsignmentNum.setText("Consignment No. :");
        add(lbConsignmentNum,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1,
                        -1));

        add(txtConsignmentNum,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140,
                        270, -1));

        lbAccNum.setText("Customer Name :");
        add(lbAccNum, new org.netbeans.lib.awtextra.AbsoluteConstraints(30,
                170, 140, -1));

        cbCustName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCustNameItemStateChanged(evt);
            }
        });

        add(cbCustName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200,
                170, 270, -1));

        lbDestination.setText("Destination :");
        add(lbDestination, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                40, 220, 130, -1));

        lbWeight.setText("Weight :");
        add(lbWeight, new org.netbeans.lib.awtextra.AbsoluteConstraints(40,
                270, 120, -1));

        lbPackets.setText("No. of packets :");
        add(lbPackets, new org.netbeans.lib.awtextra.AbsoluteConstraints(40,
                320, 90, -1));

        lbAmount.setText("Amount :");
        add(lbAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(40,
                380, 50, -1));

        lbTransactionType.setText("Transaction type :");
        add(lbTransactionType,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, -1,
                        -1));

        lbDeliveryDate.setText("Delivery Date :");
        add(lbDeliveryDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                40, 490, -1, -1));

        lbDeliveryTime.setText("Delivery Time :");
        add(lbDeliveryTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                40, 530, -1, -1));

        txtWeightKg.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtWeightKgFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWeightKgFocusLost(evt);
            }
        });

        add(txtWeightKg, new org.netbeans.lib.awtextra.AbsoluteConstraints(200,
                270, 70, -1));

        txtPackets.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPacketsFocusGained(evt);
            }
        });

        add(txtPackets, new org.netbeans.lib.awtextra.AbsoluteConstraints(200,
                320, 70, -1));

        txtAmount.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAmount.setNextFocusableComponent(txtDeliveryDate);
        txtAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtAmountFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAmountFocusLost(evt);
            }
        });
        txtAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAmountKeyReleased(evt);
            }
        });
        txtAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAmountMouseClicked(evt);
            }
        });

        add(txtAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(200,
                380, 260, -1));

        txtDeliveryDate.setEditable(false);
        txtDeliveryDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDeliveryDateFocusGained(evt);
            }
        });
        txtDeliveryDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtDeliveryDateMouseClicked(evt);
            }
        });

        add(txtDeliveryDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                190, 490, 270, -1));

        add(txtDeliveryTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                190, 530, 270, -1));

        lbKg.setText("Kg");
        add(lbKg, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270,
                -1, -1));

        lbConsignmentTime.setText("Consignment Time :");
        add(lbConsignmentTime,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1,
                        -1));

        add(txtConsignmentTime,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100,
                        270, -1));

        txtWeightGm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtWeightGmFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtWeightGmFocusLost(evt);
            }
        });

        add(txtWeightGm, new org.netbeans.lib.awtextra.AbsoluteConstraints(320,
                270, 70, -1));

        lbGm.setText("gm");
        add(lbGm, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 270,
                -1, -1));

        txtConsignmentDate.setEditable(false);
        txtConsignmentDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtConsignmentDateMouseReleased(evt);
            }
        });

        add(txtConsignmentDate,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 135,
                        -1));

        lbConsignmentDate.setText("Consignment Date :");
        add(lbConsignmentDate,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1,
                        -1));

        pnlAddTitle.setLayout(new java.awt.BorderLayout());

        pnlAddTitle.setVisible(false);
        jLabel17.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Daily Order Book");
        pnlAddTitle.add(jLabel17, java.awt.BorderLayout.CENTER);

        add(pnlAddTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(330,
                30, 440, 30));

        jLabel1.setText("Type :");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320,
                320, -1, -1));

        add(cbType, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 320,
                160, -1));

        pnlAddMode.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btSave.setMnemonic('s');
        btSave.setText("Save");
        btSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btSaveKeyReleased(evt);
            }
        });
        btSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btSaveMouseReleased(evt);
            }
        });

        pnlAddMode.add(btSave,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1,
                        -1));

        btDone.setMnemonic('d');
        btDone.setText("Done");
        btDone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                btDoneKeyReleased(evt);
            }
        });
        btDone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDoneMouseReleased(evt);
            }
        });

        pnlAddMode.add(btDone,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 20, -1,
                        -1));

        add(pnlAddMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(100,
                590, 400, 60));

        pnlModifyMode.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlModifyMode.setVisible(false);
        btSaveChanges.setMnemonic('s');
        btSaveChanges.setText("Save Changes");
        btSaveChanges.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btSaveChangesMouseReleased(evt);
            }
        });

        pnlModifyMode.add(btSaveChanges,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, -1,
                        -1));

        btDelete.setMnemonic('d');
        btDelete.setText("Delete");
        btDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDeleteMouseReleased(evt);
            }
        });

        pnlModifyMode.add(btDelete,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1,
                        -1));

        btClose.setMnemonic('c');
        btClose.setText("Close");
        btClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btCloseMouseReleased(evt);
            }
        });

        pnlModifyMode.add(btClose,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 20, -1,
                        -1));

        add(pnlModifyMode, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                70, 590, 480, 70));

        jLabel3.setText("YYYY/MM/DD");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 70,
                -1, -1));

        jLabel4.setText("HH:mm:ss");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(490,
                100, -1, -1));

        jLabel5.setText("HH:mm:ss");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(490,
                530, -1, -1));

        jLabel6.setText("YYYY/MM/DD");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(490,
                490, -1, -1));

        scrPnAmountList.setDoubleBuffered(true);
        scrPnAmountList.setVisible(false);
        lstAmount.setDoubleBuffered(true);
        lstAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lstAmountFocusLost(evt);
            }
        });
        lstAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lstAmountKeyReleased(evt);
            }
        });
        lstAmount
                .addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                    public void valueChanged(
                            javax.swing.event.ListSelectionEvent evt) {
                        lstAmountValueChanged(evt);
                    }
                });
        lstAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lstAmountMouseReleased(evt);
            }
        });

        scrPnAmountList.setViewportView(lstAmount);

        add(scrPnAmountList, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                200, 400, 260, 80));

        pnlRadioBts.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnGrpTransactionType.add(rdBtCash);
        rdBtCash.setText("Cash");
        pnlRadioBts
                .add(rdBtCash,
                        new org.netbeans.lib.awtextra.AbsoluteConstraints(0,
                                10, -1, -1));

        btnGrpTransactionType.add(rdBtCredit);
        rdBtCredit.setSelected(true);
        rdBtCredit.setText("Credit");
        pnlRadioBts.add(rdBtCredit,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 10, -1,
                        -1));

        add(pnlRadioBts, new org.netbeans.lib.awtextra.AbsoluteConstraints(200,
                420, 260, 50));

        pnlBulkOrder.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBulkOrder.setVisible(false);
        jLabel8.setText("To :");
        pnlBulkOrder.add(jLabel8,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 0, -1,
                        -1));

        txtConsignmentNumFrom
                .setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtConsignmentNumFrom.setText("1");
        txtConsignmentNumFrom
                .addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        txtConsignmentNumFromFocusGained(evt);
                    }

                    public void focusLost(java.awt.event.FocusEvent evt) {
                        txtConsignmentNumFromFocusLost(evt);
                    }
                });

        pnlBulkOrder
                .add(txtConsignmentNumFrom,
                        new org.netbeans.lib.awtextra.AbsoluteConstraints(70,
                                0, 60, -1));

        jLabel9.setText("From :");
        pnlBulkOrder
                .add(jLabel9,
                        new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0,
                                -1, -1));

        txtConsignmentNumTo
                .setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtConsignmentNumTo.setText("1");
        txtConsignmentNumTo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtConsignmentNumToFocusGained(evt);
            }

            public void focusLost(java.awt.event.FocusEvent evt) {
                txtConsignmentNumToFocusLost(evt);
            }
        });

        pnlBulkOrder.add(txtConsignmentNumTo,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 60,
                        -1));

        add(pnlBulkOrder, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                480, 140, 310, 50));

        cbDestination.setEditable(true);
        fillDestinationCombo();
        add(cbDestination, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                200, 220, 270, -1));

        pnlSearchMain.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlSearchMain.setBorder(javax.swing.BorderFactory.createTitledBorder(
                null, "Search:", javax.swing.border.TitledBorder.LEFT,
                javax.swing.border.TitledBorder.DEFAULT_POSITION));
        pnlSearchMain.setVisible(false);
        lbFromDate.setText("From :");
        pnlSearchMain.add(lbFromDate,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1,
                        -1));

        txtFromDate.setEditable(false);
        txtFromDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtFromDateMouseReleased(evt);
            }
        });

        pnlSearchMain.add(txtFromDate,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 150,
                        -1));

        lbToDate.setText("To :");
        pnlSearchMain.add(lbToDate,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 30, -1,
                        -1));

        txtToDate.setEditable(false);
        txtToDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                txtToDateMouseReleased(evt);
            }
        });

        pnlSearchMain.add(txtToDate,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, 150,
                        -1));

        btDeleteRecords.setText("Delete Records");
        btDeleteRecords.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDeleteRecordsMouseReleased(evt);
            }
        });

        pnlSearchMain.add(btDeleteRecords,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 530, -1,
                        -1));

        btGrSearchBy.add(rdBtConsignmentNum);
        rdBtConsignmentNum.setSelected(true);
        rdBtConsignmentNum.setText("Consignment No.");
        rdBtConsignmentNum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdBtConsignmentNumMouseReleased(evt);
            }
        });

        pnlSearchMain.add(rdBtConsignmentNum,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, -1,
                        -1));

        btGrSearchBy.add(rdBtClientName);
        rdBtClientName.setText("Client Name");
        rdBtClientName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                rdBtClientNameMouseReleased(evt);
            }
        });

        pnlSearchMain.add(rdBtClientName,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 110, -1,
                        -1));

        jLabel13.setText("Search By :");
        pnlSearchMain.add(jLabel13,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1,
                        -1));

        pnlSearchByClientName
                .setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlSearchByClientName.setVisible(false);
        jLabel14.setText("Client Name :");
        pnlSearchByClientName.add(jLabel14,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1,
                        -1));

        cbCustNameSearch.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCustNameSearchItemStateChanged(evt);
            }
        });

        pnlSearchByClientName.add(cbCustNameSearch,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 250,
                        -1));

        pnlSearchMain.add(pnlSearchByClientName,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, 440,
                        40));

        pnlSearchByConsNum.setLayout(new java.awt.BorderLayout());

        pnlSearchMain.add(pnlSearchByConsNum,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 220,
                        300, 280));

        jLabel2.setText("Consignment Numbers :");
        pnlSearchMain.add(jLabel2,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 180,
                        -1));

        add(pnlSearchMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                580, 70, 520, 610));

        pnlModifyTitle.setLayout(new java.awt.BorderLayout());

        pnlModifyTitle.setVisible(false);
        jLabel18.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Modify Daily Order Book");
        pnlModifyTitle.add(jLabel18, java.awt.BorderLayout.CENTER);

        add(pnlModifyTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                330, 30, 440, 30));

        pnlBulkOrderTitle.setLayout(new java.awt.BorderLayout());

        pnlBulkOrderTitle.setVisible(false);
        jLabel19.setFont(new java.awt.Font("Dialog", 1, 18));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Daily Order Book: Bulk Order");
        pnlBulkOrderTitle.add(jLabel19, java.awt.BorderLayout.CENTER);

        add(pnlBulkOrderTitle,
                new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 440,
                        30));

        btDateBackward.setIcon(new javax.swing.ImageIcon(getClass()
                .getResource("/images/backward.JPG")));
        btDateBackward.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDateBackwardMouseReleased(evt);
            }
        });

        add(btDateBackward, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                370, 70, 24, 20));

        btDateForward.setIcon(new javax.swing.ImageIcon(getClass().getResource(
                "/images/forward.JPG")));
        btDateForward.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btDateForwardMouseReleased(evt);
            }
        });

        add(btDateForward, new org.netbeans.lib.awtextra.AbsoluteConstraints(
                410, 70, 24, 20));

    }// </editor-fold>//GEN-END:initComponents

    private void btDateBackwardMouseReleased(java.awt.event.MouseEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_btDateBackwardMouseReleased
        // Add your handling code here:
        txtConsignmentDate.setText(getPrevBackDate(
                txtConsignmentDate.getText(), -1));
    }// GEN-LAST:event_btDateBackwardMouseReleased

    private void btDateForwardMouseReleased(java.awt.event.MouseEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_btDateForwardMouseReleased
        // Add your handling code here:
        txtConsignmentDate.setText(getPrevBackDate(
                txtConsignmentDate.getText(), 1));
    }// GEN-LAST:event_btDateForwardMouseReleased

    private void cbCustNameItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-
        // FIRST
        // :
        // event_cbCustNameItemStateChanged
        // Add your handling code here:
        cbCustName.setToolTipText(cbCustName.getSelectedItem().toString());
    }// GEN-LAST:event_cbCustNameItemStateChanged

    private void lstAmountKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:
        // event_lstAmountKeyReleased
        // Add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            amtListItemSelected();
            hidePriceList();
        }
    }// GEN-LAST:event_lstAmountKeyReleased

    private void txtConsignmentNumToFocusGained(java.awt.event.FocusEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_txtConsignmentNumToFocusGained
        // Add your handling code here:
        txtConsignmentNumTo.selectAll();
    }// GEN-LAST:event_txtConsignmentNumToFocusGained

    private void txtConsignmentNumFromFocusGained(java.awt.event.FocusEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_txtConsignmentNumFromFocusGained
        // Add your handling code here:
        txtConsignmentNumFrom.selectAll();
    }// GEN-LAST:event_txtConsignmentNumFromFocusGained

    private void rdBtConsignmentNumMouseReleased(java.awt.event.MouseEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_rdBtConsignmentNumMouseReleased
        // Add your handling code here:
        findSearchCriteria();
    }// GEN-LAST:event_rdBtConsignmentNumMouseReleased

    private void rdBtClientNameMouseReleased(java.awt.event.MouseEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_rdBtClientNameMouseReleased
        // Add your handling code here:
        findSearchCriteria();
    }// GEN-LAST:event_rdBtClientNameMouseReleased

    private void btDeleteRecordsMouseReleased(java.awt.event.MouseEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_btDeleteRecordsMouseReleased
        // Add your handling code here:
        Object[] consignmentNos = srchPnl.listSearch.getSelectedValues();

        if (consignmentNos == null || consignmentNos.length == 0) {
            return;
        }

        int opt = JOptionPane.showConfirmDialog(this,
                "You are about to delete " + consignmentNos.length
                        + " record(s) permanently. Are you sure?",
                "Confirm delete", JOptionPane.YES_NO_OPTION);
        if (opt == JOptionPane.YES_OPTION) {// user chooses to delete
            int recordsDeleted = consignmentNos.length;
            for (int i = 0; i < consignmentNos.length; i++) {
                if (!dailyOrderBookController.deleteRecord(consignmentNos[i])) {
                    recordsDeleted--;
                    JOptionPane.showMessageDialog(this,
                            "Record could not be deleted: Consignment No.: "
                                    + consignmentNos[i],
                            "Could not delete record...",
                            JOptionPane.ERROR_MESSAGE);
                }
            }
            if (recordsDeleted > 0) {
                JOptionPane.showMessageDialog(this, recordsDeleted
                        + " Record(s) deleted successfully",
                        "Delete successful", JOptionPane.INFORMATION_MESSAGE);
                MachExpressFrame.INSTANCE.showDailyOrderBookModify();
            }
        }
    }// GEN-LAST:event_btDeleteRecordsMouseReleased

    private void cbCustNameSearchItemStateChanged(java.awt.event.ItemEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_cbCustNameSearchItemStateChanged
        // Add your handling code here:
        // fill cbInvoiceNum
        Object[] obj2 = dailyOrderBookController.getConsignmentNums(txtFromDate
                .getText(), txtToDate.getText(), cbCustNameSearch
                .getSelectedItem());
        if (obj2 == null || obj2.length == 0)
            JOptionPane.showMessageDialog(this,
                    "Please enter proper search criteria.", "No match found.",
                    JOptionPane.INFORMATION_MESSAGE);
        else
            srchPnl.fillListWithNewArr(obj2);
    }// GEN-LAST:event_cbCustNameSearchItemStateChanged

    private void txtToDateMouseReleased(java.awt.event.MouseEvent evt) {// GEN-
        // FIRST
        // :
        // event_txtToDateMouseReleased
        // Add your handling code here:
        ShowCalendar cal = new ShowCalendar(new java.awt.Frame(), true,
                txtToDate);
        cal.show();
        findSearchCriteria();
    }// GEN-LAST:event_txtToDateMouseReleased

    private void txtFromDateMouseReleased(java.awt.event.MouseEvent evt) {// GEN-
        // FIRST
        // :
        // event_txtFromDateMouseReleased
        // Add your handling code here:
        ShowCalendar cal = new ShowCalendar(new java.awt.Frame(), true,
                txtFromDate);
        cal.show();
        findSearchCriteria();
    }// GEN-LAST:event_txtFromDateMouseReleased

    private void txtConsignmentNumToFocusLost(java.awt.event.FocusEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_txtConsignmentNumToFocusLost
        // Add your handling code here:
        if (!txtValid.checkNumber(txtConsignmentNumTo)) {

        }
    }// GEN-LAST:event_txtConsignmentNumToFocusLost

    private void txtConsignmentNumFromFocusLost(java.awt.event.FocusEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_txtConsignmentNumFromFocusLost
        // Add your handling code here:
        if (!txtValid.checkNumber(txtConsignmentNumFrom)) {

        }
    }// GEN-LAST:event_txtConsignmentNumFromFocusLost

    private void txtAmountKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:
        // event_txtAmountKeyReleased
        // Add your handling code here:
        if (evt.getKeyCode() == evt.VK_DOWN && lstAmount.isVisible()) {
            lstAmount.requestFocus();
            lstAmount.setSelectedIndex(0);
        }
    }// GEN-LAST:event_txtAmountKeyReleased

    private void txtDeliveryDateFocusGained(java.awt.event.FocusEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_txtDeliveryDateFocusGained
        // Add your handling code here:
        hidePriceList();
    }// GEN-LAST:event_txtDeliveryDateFocusGained

    private void lstAmountValueChanged(javax.swing.event.ListSelectionEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_lstAmountValueChanged
        // Add your handling code here:
        amtListItemSelected();
    }// GEN-LAST:event_lstAmountValueChanged

    private void lstAmountMouseReleased(java.awt.event.MouseEvent evt) {// GEN-
        // FIRST
        // :
        // event_lstAmountMouseReleased
        // Add your handling code here:
        amtListItemSelected();
    }// GEN-LAST:event_lstAmountMouseReleased

    private void txtAmountMouseClicked(java.awt.event.MouseEvent evt) {// GEN-
        // FIRST:
        // event_txtAmountMouseClicked
        // Add your handling code here:
        if (!scrPnAmountList.isVisible())
            showPriceList();
    }// GEN-LAST:event_txtAmountMouseClicked

    private void formMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:
        // event_formMouseClicked
        // Add your handling code here:
        if (scrPnAmountList.isVisible())
            hidePriceList();
    }// GEN-LAST:event_formMouseClicked

    private void lstAmountFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:
        // event_lstAmountFocusLost
        // Add your handling code here:
        hidePriceList();
    }// GEN-LAST:event_lstAmountFocusLost

    private void txtAmountFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST:
        // event_txtAmountFocusLost
        // Add your handling code here:

    }// GEN-LAST:event_txtAmountFocusLost

    private void txtWeightGmFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST
        // :
        // event_txtWeightGmFocusLost
        // Add your handling code here:
        if (!txtValid.checkNumber(txtWeightGm)) {

        }
    }// GEN-LAST:event_txtWeightGmFocusLost

    private void txtWeightKgFocusLost(java.awt.event.FocusEvent evt) {// GEN-FIRST
        // :
        // event_txtWeightKgFocusLost
        // Add your handling code here:
        if (!txtValid.checkNumber(txtWeightKg)) {

        }
    }// GEN-LAST:event_txtWeightKgFocusLost

    private void btCloseMouseReleased(java.awt.event.MouseEvent evt) {// GEN-FIRST
        // :
        // event_btCloseMouseReleased
        // Add your handling code here:
        doneButtonPressed();
    }// GEN-LAST:event_btCloseMouseReleased

    private void btDeleteMouseReleased(java.awt.event.MouseEvent evt) {// GEN-
        // FIRST:
        // event_btDeleteMouseReleased
        // Add your handling code here:
        deleteButtonPressed();
    }// GEN-LAST:event_btDeleteMouseReleased

    private void btSaveChangesMouseReleased(java.awt.event.MouseEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_btSaveChangesMouseReleased
        // Add your handling code here:
        saveChangeButtonPressed();
    }// GEN-LAST:event_btSaveChangesMouseReleased

    private void txtAmountFocusGained(java.awt.event.FocusEvent evt) {// GEN-FIRST
        // :
        // event_txtAmountFocusGained
        // Add your handling code here:
        txtAmount.selectAll();
        showPriceList();
    }// GEN-LAST:event_txtAmountFocusGained

    private void txtPacketsFocusGained(java.awt.event.FocusEvent evt) {// GEN-
        // FIRST:
        // event_txtPacketsFocusGained
        // Add your handling code here:
        txtPackets.selectAll();
    }// GEN-LAST:event_txtPacketsFocusGained

    private void txtWeightGmFocusGained(java.awt.event.FocusEvent evt) {// GEN-
        // FIRST
        // :
        // event_txtWeightGmFocusGained
        // Add your handling code here:
        txtWeightGm.selectAll();
    }// GEN-LAST:event_txtWeightGmFocusGained

    private void txtWeightKgFocusGained(java.awt.event.FocusEvent evt) {// GEN-
        // FIRST
        // :
        // event_txtWeightKgFocusGained
        // Add your handling code here:
        txtWeightKg.selectAll();
    }// GEN-LAST:event_txtWeightKgFocusGained

    private void btDoneMouseReleased(java.awt.event.MouseEvent evt) {// GEN-FIRST
        // :
        // event_btDoneMouseReleased
        // Add your handling code here:
        doneButtonPressed();
    }// GEN-LAST:event_btDoneMouseReleased

    private void btDoneKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:
        // event_btDoneKeyReleased
        // Add your handling code here:
        doneButtonPressed();
    }// GEN-LAST:event_btDoneKeyReleased

    private void btSaveMouseReleased(java.awt.event.MouseEvent evt) {// GEN-FIRST
        // :
        // event_btSaveMouseReleased
        // Add your handling code here:
        saveButtonPressed();
    }// GEN-LAST:event_btSaveMouseReleased

    private void btSaveKeyReleased(java.awt.event.KeyEvent evt) {// GEN-FIRST:
        // event_btSaveKeyReleased
        // Add your handling code here:
        saveButtonPressed();
    }// GEN-LAST:event_btSaveKeyReleased

    private void txtDeliveryDateMouseClicked(java.awt.event.MouseEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_txtDeliveryDateMouseClicked
        // Add your handling code here:
        new ShowCalendar(new java.awt.Frame(), true, txtDeliveryDate).show();
    }// GEN-LAST:event_txtDeliveryDateMouseClicked

    private void txtConsignmentDateMouseReleased(java.awt.event.MouseEvent evt) {// GEN
        // -
        // FIRST
        // :
        // event_txtConsignmentDateMouseReleased
        // Add your handling code here:
        new ShowCalendar(new java.awt.Frame(), true, txtConsignmentDate).show();
    }// GEN-LAST:event_txtConsignmentDateMouseReleased

    /**
     *sets some of the fields invisible so that new data can be entered
     */
    public void setFormToAdd() {
        pnlAddTitle.setVisible(true);
        // txtCustName.setVisible(false);
        // pnlModifyMode.setVisible(false);
        // pnlSearch.setVisible(false);
        /*
         * lbDeliveryDate.setVisible(false); txtDeliveryDate.setVisible(false);
         * lbDeliveryTime.setVisible(false);
         * txtDeliveryTime.setVisible(false);//
         */
    }

    /**
     *sets the form to modify mode
     */
    public void setFormToModify() {
        pnlModifyTitle.setVisible(true);
        pnlAddMode.setVisible(false);
        txtConsignmentTime.setEditable(false);
        pnlSearchMain.setVisible(true);
        // remove mouse listener from consignment date so that user cannot
        // modify
        /*
         * MouseListener[] msArr = txtConsignmentDate.getMouseListeners();
         * for(int i=0; i<msArr.length; i++)
         * txtConsignmentDate.removeMouseListener(msArr[i]);//
         */
        // add the search panel
        srchPnl = new SearchPanel_NoButton(dailyOrderBookController
                .getConsignmentNums(txtFromDate.getText(), txtToDate.getText()));
        pnlSearchByConsNum.add(srchPnl, java.awt.BorderLayout.CENTER);

        srchPnl.listSearch.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent me) {
                if (me.getClickCount() == 2) {
                    // show record
                    if (srchPnl.listSearch.getSelectedValue() != null)
                        displayRecordFromList(srchPnl.listSearch
                                .getSelectedValue().toString());
                }
            }
        });

        pnlModifyMode.setVisible(true);
    }

    /**
     *to fill cbCustName combo with new elements. it removes the old elements if any
     */
    public void fillCustNameCombo(Object[] objArr) {
        JComboUtils.fillComboWithNewArray(cbCustName, objArr);
        cbCustName.setToolTipText(cbCustName.getSelectedItem().toString());
    }

    /**
     *to fill cbDestination combo with new elements. it removes the old elements if any
     */
    private void fillDestinationCombo() {
        JComboUtils.fillComboWithNewArray(cbDestination,
                dailyOrderBookController.getDestinationArr());
    }

    /**
     *to set the decimal & number fields to 0 and date/time to current date time
     */
    private void setSpecialFields() {
        txtConsignmentDate.setText(dt.getMySqlDate());
        txtConsignmentTime.setText(dt.getMySqlTime());
        /*
         * txtDeliveryDate.setText(dt.getMySqlDate());
         * txtDeliveryTime.setText(dt.getMySqlTime());//
         */
        txtWeightKg.setText("0");
        txtWeightGm.setText("0");
        txtPackets.setText("1");
        txtAmount.setText("0.00");
        // set date fields
        setDateFields();
    }

    /**
     * check data validation
     * 
     */
    private boolean isDataValid() {
        if (txtConsignmentDate.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Please enter the Consignment Date.",
                    "'Consignment Date' is vacant:",
                    JOptionPane.INFORMATION_MESSAGE);
            txtConsignmentDate.requestFocus();
            return false;
        } else if (txtConsignmentNum.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this,
                    "Please enter the Consignment Number.",
                    "'Consignment Number' is vacant:",
                    JOptionPane.INFORMATION_MESSAGE);
            txtConsignmentNum.requestFocus();
            return false;
        } else if (cbDestination.getSelectedItem().toString().trim().equals("")) {
            JOptionPane
                    .showMessageDialog(this, "Please enter the Destination.",
                            "'Destination' is vacant:",
                            JOptionPane.INFORMATION_MESSAGE);
            cbDestination.requestFocus();
            return false;
        } else if (!txtValid.checkNumber(txtPackets)) {
            return false;
        } else if (!txtValid.checkDecimal(txtAmount, pattern)) {
            return false;
        } else if (isZeroVal(txtWeightKg) && isZeroVal(txtWeightGm)) {
            JOptionPane.showMessageDialog(this, "Enter a non-zero number.",
                    "Value cannot be zero:", JOptionPane.INFORMATION_MESSAGE);
            txtWeightKg.requestFocus();
            return false;
        } else if (isZeroVal(txtPackets)) {
            JOptionPane.showMessageDialog(this, "Enter a non-zero number.",
                    "Value cannot be zero:", JOptionPane.INFORMATION_MESSAGE);
            txtPackets.requestFocus();
            return false;
        } else if (Float.parseFloat(txtAmount.getText()) == 0) {
            JOptionPane.showMessageDialog(this, "Enter a non-zero number.",
                    "Value cannot be zero:", JOptionPane.INFORMATION_MESSAGE);
            txtAmount.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    private boolean isZeroVal(JTextField txtFld) {
        try {
            int num = Integer.parseInt(txtFld.getText());
            if (num == 0)
                return true;
            else
                return false;
        } catch (NumberFormatException e) {
            System.out.println(e);
            return true;
        }
    }

    private void doneButtonPressed() {
        this.setVisible(false);
    }

    /**
     * to get data from the user's end
     * 
     * 
     */
    private DailyOrderBookObject getValuesFromInput() {
        DailyOrderBookObject dlObj = null;
        Vector objVec = new Vector(DailyOrderBookDB.fields);
        objVec.add(txtConsignmentNum.getText());
        objVec.add(txtConsignmentDate.getText());
        objVec.add(txtConsignmentTime.getText());
        if (cbCustName.isVisible())
            objVec.add(cbCustName.getSelectedItem());
        else
            objVec.add(cbCustName.getSelectedItem());
        objVec.add(cbDestination.getSelectedItem().toString().trim());
        objVec.add(cbType.getSelectedItem());
        objVec.add(txtWeightKg.getText());
        objVec.add(txtWeightGm.getText());
        objVec.add(txtPackets.getText());
        objVec.add(txtAmount.getText());
        if (rdBtCredit.isSelected())
            objVec.add("1");
        else
            objVec.add("0");
        objVec.add(dailyOrderBookController.getEmplIDLoggedIn());// employeeid
        dt = new DateTimeUtils();
        objVec.add(dt.getMySqlDateTime());// entry date/time
        objVec.add(txtDeliveryDate.getText());// delivery date
        objVec.add(txtDeliveryTime.getText());// delivery time

        // pass on the data, in form of the model to the controller
        try {
            dlObj = new DailyOrderBookObject(objVec);
        } catch (Exception e) {
            System.out.println(e);
        }// */

        return dlObj;
    }

    /**
     *to add new record
     */
    private void saveButtonPressed() {
        if (isDataValid()) {
            // to get the id from the name of the client
            DailyOrderBookObject obj = getValuesFromInput();
            try {
                Object acc = clDB.queryOneElement(ClientAccountDB.accnum,
                        "WHERE " + ClientAccountDB.name + "='"
                                + obj.getAccNum() + "'");
                obj.setAccNum(acc);
            } catch (Exception e) {
                System.out.println(e);
            }
            if (pnlBulkOrder.isVisible()) {
                int from = Integer.parseInt(txtConsignmentNumFrom.getText());
                int to = Integer.parseInt(txtConsignmentNumTo.getText());
                Object prefix = obj.getConsignmentNum();
                for (; from <= to; from++) {
                    String consignmentNum = "" + prefix + from;
                    obj.setConsignmentNum(consignmentNum);
                    dailyOrderBookController.saveInDB(this, obj, true);
                }
                JOptionPane.showMessageDialog(this,
                        "Bulk data enterd by you has been saved.",
                        "Saved successfully:", JOptionPane.INFORMATION_MESSAGE);
            } else
                dailyOrderBookController.saveInDB(this, obj, false);
            // resetFields();
        }
    }

    /**
     *to modify existing record
     */
    private void saveChangeButtonPressed() {
        if (isDataValid()) {
            dailyOrderBookController.modifyRecord(this, getValuesFromInput(),
                    consNum);
            // resetFields();
        }
    }

    /**
     * sets all fields in view to blank
     * 
     */
    public void resetFields() {
        fillDestinationCombo();
        txtConsignmentNum.setText("");

        cbType.setSelectedIndex(0);
        cbDestination.setSelectedItem("");
        // setSpecialFields();
        rdBtCredit.setSelected(true);
        txtDeliveryDate.setText("");
        txtDeliveryTime.setText("");
        txtConsignmentNumFrom.setText("1");
        txtConsignmentNumTo.setText("1");
    }

    /**
     *populates all the fielda to modify mode
     */
    private void setFieldsToModify(DailyOrderBookObject dlObj) {
        if (dlObj == null) {
            JOptionPane.showMessageDialog(this,
                    "Please enter proper search criteria.", "No match found.",
                    JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        consNum = dlObj.getConsignmentNum();
        txtConsignmentNum.setText(dlObj.getConsignmentNum().toString());
        // get client name
        Object clientName = null;
        Database clAccDb = new Database(clientaccount);
        try {
            clientName = clAccDb.queryOneElement(ClientAccountDB.name, "WHERE "
                    + ClientAccountDB.accnum + "='" + dlObj.getAccNum() + "'");
        } catch (Exception e) {
        }
        cbCustName.setSelectedItem(clientName.toString());
        cbType.setSelectedItem(dlObj.getType());
        cbDestination.setSelectedItem(dlObj.getDestination());
        txtConsignmentDate.setText(dlObj.getConsignmentDate().toString());
        txtConsignmentTime.setText(dlObj.getConsignmentTime().toString());
        txtDeliveryDate.setText(dlObj.getDeliveryDate().toString());
        txtDeliveryTime.setText(dlObj.getDeliveryTime().toString());
        txtWeightKg.setText(dlObj.getWeightKg().toString());
        txtWeightGm.setText(dlObj.getWeightGram().toString());
        txtPackets.setText(dlObj.getPackets().toString());
        txtAmount.setText(dlObj.getAmount().toString());
        // populate
        int credit = Integer.parseInt(dlObj.getIsCredit().toString());
        if (credit == 1)
            rdBtCredit.setSelected(true);
        else
            rdBtCredit.setSelected(false);
    }

    /**
     *takes appropriate action on delete bt pressed
     */
    private void deleteButtonPressed() {
        if (txtConsignmentNum.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "Select a recprd to delete.",
                    "No record selected", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        int opt = JOptionPane.showConfirmDialog(this,
                "You are about to delete a record permanently. Are you sure?",
                "Confirm delete", JOptionPane.YES_NO_OPTION);
        if (opt == JOptionPane.YES_OPTION) {// user chooses to delete
            if (dailyOrderBookController.deleteRecord(consNum))
                JOptionPane.showMessageDialog(this,
                        "Record deleted successfully", "Delete successful",
                        JOptionPane.INFORMATION_MESSAGE);
            else
                JOptionPane
                        .showMessageDialog(
                                this,
                                "Record could not be deleted: enter proper search criteria",
                                "No record found corresponding your search criteria",
                                JOptionPane.ERROR_MESSAGE);
        }
    }

    private void showPriceList() {
        int weight = 1000 * Integer.parseInt(txtWeightKg.getText())
                + Integer.parseInt(txtWeightGm.getText());
        Vector vec = dailyOrderBookController.getSlabPrice(weight);

        if (vec.size() > 0) {
            lstAmount.setListData(vec);
            scrPnAmountList.setVisible(true);
            pnlRadioBts.setVisible(false);
        }
    }

    private void hidePriceList() {
        if (scrPnAmountList.isVisible())
            scrPnAmountList.setVisible(false);
        if (!pnlRadioBts.isVisible())
            pnlRadioBts.setVisible(true);
    }

    private void amtListItemSelected() {
        if (lstAmount.getSelectedIndex() != -1)
            txtAmount.setText(lstAmount.getSelectedValue().toString());
    }

    /**
     *sets form to bulk order mode
     */
    public void setFormToBulkOrder() {
        pnlBulkOrderTitle.setVisible(true);
        pnlBulkOrder.setVisible(true);
        lbConsignmentNum.setText(lbConsignmentNum.getText() + "     Prefix :");
    }

    /**
     * search by invoice num
     * 
     */
    private void searchByConsignmentNum() {
        // make pnlSearchByClientName invisible
        pnlSearchByClientName.setVisible(false);
        // fill cbInvoiceNum
        Object[] obj = dailyOrderBookController.getConsignmentNums(txtFromDate
                .getText(), txtToDate.getText());
        if (obj == null || obj.length == 0)
            JOptionPane.showMessageDialog(this,
                    "Please enter proper search criteria.", "No match found.",
                    JOptionPane.INFORMATION_MESSAGE);
        else
            srchPnl.fillListWithNewArr(obj);
    }

    /**
     * search by client names
     * 
     */
    private void searchByClientNames() {
        // make pnlSearchByClientName visible
        pnlSearchByClientName.setVisible(true);
        // fill cbClientName
        Object[] obj1 = dailyOrderBookController.getClientNames(txtFromDate
                .getText(), txtToDate.getText());
        if (obj1 == null || obj1.length == 0)
            JOptionPane.showMessageDialog(this,
                    "Please enter proper search criteria.", "No match found.",
                    JOptionPane.INFORMATION_MESSAGE);
        else {
            JComboUtils.fillComboWithNewArray(cbCustNameSearch, obj1);
            // fill cbInvoiceNum
            Object[] obj2 = dailyOrderBookController.getConsignmentNums(
                    txtFromDate.getText(), txtToDate.getText(),
                    cbCustNameSearch.getSelectedItem());
            if (obj2 == null || obj2.length == 0)
                JOptionPane.showMessageDialog(this,
                        "Please enter proper search criteria.",
                        "No match found.", JOptionPane.INFORMATION_MESSAGE);
            else
                srchPnl.fillListWithNewArr(obj2);
        }
    }

    /**
     * finds out the current search criteria chosen by the user: inv num/cust name and takes appropriate action
     * 
     */
    private void findSearchCriteria() {
        if (rdBtConsignmentNum.isSelected())
            searchByConsignmentNum();
        else
            searchByClientNames();
    }

    /**
     * displays the given invoice according to the selected item in the invoice num combo
     * 
     */
    private void displayRecordFromList(String consignmentNum) {
        DailyOrderBookObject obj = dailyOrderBookController
                .getDailyOrderBookRecord(consignmentNum);
        setFieldsToModify(obj);
    }

    /**
     * to set the txtFromDate to the 1st of the month and txtToDate to the current date
     * 
     * 
     */
    private void setDateFields() {
        // set date fields
        GregorianCalendar gCal = new GregorianCalendar();
        gCal.set(gCal.DATE, gCal.getMinimum(gCal.DATE));
        DateTimeUtils dt = new DateTimeUtils();
        txtFromDate.setText(dt.getFormattedDate(gCal.getTime(), "yyyy/MM/dd"));
        txtToDate.setText(dt.getMySqlDate());
    }

    /**
     *to get the previous date
     */
    private String getPrevBackDate(String date, int val) {
        DateTimeUtils dt = new DateTimeUtils();
        GregorianCalendar gCal = dt.getGrCalFromString(date);
        gCal.add(gCal.DATE, val);
        return dt.getFormattedDate(gCal.getTime(), "yyyy/MM/dd");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btClose;
    private javax.swing.JButton btDateBackward;
    private javax.swing.JButton btDateForward;
    private javax.swing.JButton btDelete;
    private javax.swing.JButton btDeleteRecords;
    private javax.swing.JButton btDone;
    private javax.swing.ButtonGroup btGrSearchBy;
    private javax.swing.JButton btSave;
    private javax.swing.JButton btSaveChanges;
    private javax.swing.ButtonGroup btnGrpTransactionType;
    private javax.swing.JComboBox cbCustName;
    private javax.swing.JComboBox cbCustNameSearch;
    private javax.swing.JComboBox cbDestination;
    private javax.swing.JComboBox cbType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbAccNum;
    private javax.swing.JLabel lbAmount;
    private javax.swing.JLabel lbConsignmentDate;
    private javax.swing.JLabel lbConsignmentNum;
    private javax.swing.JLabel lbConsignmentTime;
    private javax.swing.JLabel lbDeliveryDate;
    private javax.swing.JLabel lbDeliveryTime;
    private javax.swing.JLabel lbDestination;
    private javax.swing.JLabel lbFromDate;
    private javax.swing.JLabel lbGm;
    private javax.swing.JLabel lbKg;
    private javax.swing.JLabel lbPackets;
    private javax.swing.JLabel lbToDate;
    private javax.swing.JLabel lbTransactionType;
    private javax.swing.JLabel lbWeight;
    private javax.swing.JList lstAmount;
    private javax.swing.JPanel pnlAddMode;
    private javax.swing.JPanel pnlAddTitle;
    private javax.swing.JPanel pnlBulkOrder;
    private javax.swing.JPanel pnlBulkOrderTitle;
    private javax.swing.JPanel pnlModifyMode;
    private javax.swing.JPanel pnlModifyTitle;
    private javax.swing.JPanel pnlRadioBts;
    private javax.swing.JPanel pnlSearchByClientName;
    private javax.swing.JPanel pnlSearchByConsNum;
    private javax.swing.JPanel pnlSearchMain;
    private javax.swing.JRadioButton rdBtCash;
    private javax.swing.JRadioButton rdBtClientName;
    private javax.swing.JRadioButton rdBtConsignmentNum;
    private javax.swing.JRadioButton rdBtCredit;
    private javax.swing.JScrollPane scrPnAmountList;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtConsignmentDate;
    private javax.swing.JTextField txtConsignmentNum;
    private javax.swing.JTextField txtConsignmentNumFrom;
    private javax.swing.JTextField txtConsignmentNumTo;
    private javax.swing.JTextField txtConsignmentTime;
    private javax.swing.JTextField txtDeliveryDate;
    private javax.swing.JTextField txtDeliveryTime;
    private javax.swing.JTextField txtFromDate;
    private javax.swing.JTextField txtPackets;
    private javax.swing.JTextField txtToDate;
    private javax.swing.JTextField txtWeightGm;
    private javax.swing.JTextField txtWeightKg;
    // End of variables declaration//GEN-END:variables

    private TxtFldValidation txtValid = null;

    /**
     *holds the patern for decimal num
     */
    private String pattern = "0.00";// to be read from property file
    private DailyOrderBookController dailyOrderBookController = null;
    private DateTimeUtils dt = null;

    /**
     *it holds the consignment no. for modificatiom: in modify mode, u can modify the consignment no. but need the old value to update the record
     */
    private Object consNum = null;

    private Database clDB = new Database(TableListDB.clientaccount);

    private SearchPanel_NoButton srchPnl = null;

}
